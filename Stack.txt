#include <iostream>
#include <string>

using namespace std;

template<class T>
class Stack {
private:
	int top;
	int cap;
	T* buff;

public:
	Stack() {
		top = -1;
		cap = 0;
		buff = NULL;
	}
	bool empty() {
		return this->top == -1;
	}
	bool isFull() {
		return top == cap - 1;
	}
	
	void reverse(int newCap) {
		T* newBuff = new T[newCap];
		for (int i = 0; i <= top; i++)
			newBuff[i] = buff[i];
		cap = newCap;
		delete[] buff;
		buff = newBuff;
	}

	void push(T value) {
		if (isFull())
			reverse(cap * 2 + 1);

		buff[++top] = value;
	}

	T pop() {
		if (empty())
			return 0;
		top--;
		return buff[top + 1];
	}
	T Top() {
		if (empty()) return 0;
		return buff[top];
	}
};

int main() {
	Stack<int> stack;
	stack.push(1);
	stack.push(2);
	stack.push(3);
	stack.push(4);

	do {
		int x = stack.pop();
		cout << x << " ";
	} while (!stack.empty());
	return 0;
}